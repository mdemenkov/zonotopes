classdef z2d<handle
    % Определение нормальных векторов к граням и вершин 
    % двумерного зонотопа с помощью аналитических формул
    % Метод см. в моей диссертации, доступной по адресу
    % https://www.dora.dmu.ac.uk/xmlui/handle/2086/4950?show=full
    properties
        m % Размерность гиперкуба
        Z % Матрица генераторов
        D
        r
        % Зонотоп задается системой: Dx<=r,-Dx<=r, x\in R^2, r\in R^m
        % Зонотоп является симметричным многогранником, поэтому
        % хранятся только грани и вершины его "половины"
        V % Список вершин, соответствующих граням
        % Для каждой i-ой грани D(i,:) определяет нормаль, а 
        % V(i).left и V(i).right - две соответствующие ей вершины
        V_clock % Матрица столбцов-вершин, упорядоченных
        % против часовой стрелки (результат алгоритма Qhull)
    end
    
    methods(Static=true)
    % Вспомогательные функции, не являющиеся методами
        function draw_mirror(x_1,x_2,col)
                 plot([x_1(1) x_2(1)],[x_1(2) x_2(2)],col,'LineWidth',2);
                 plot([-x_1(1) -x_2(1)],[-x_1(2) -x_2(2)],col,'LineWidth',2);
        end
    end
    
    methods
        % Методы класса
        function self=z2d(Z)
        % На входе - матрица генераторов, вектор, умножаемый на нее
        % предполагается принадлежащим единичному гиперкубу
        m=size(Z,2);
        D=[-Z(2,:)' Z(1,:)'];% Матрица нормалей к граням
        r=sum(abs(D*Z)')';% Вектор расстояний от начала координат
        % r(j)=sum_{i=1}^m |D(j,:)*Z(:,i)|
        % Заполняем поля объекта
        self.m=m;self.D=D;self.r=r;self.Z=Z;
        % Теперь зонотоп задается системой Dx<=r,-Dx<=r
        end
        
        function draw_lines(self,len,col)
        % Рисует зонотоп без использования вершин 
        % в стиле книги Blanchini & Miani "Set-theoretic methods in control"
        % Рисует линии, заданные уравнениями вида <d,x>=r
        % Находит точку пересечения линии и прямой из начала координат,
        % перпендикулярной линии
        % От нее рисует в обе стороны отрезки длиной len, цветом col
        hold on;
        D=self.D;r=self.r;
          for i=1:self.m
              perp_d=[-D(i,2) D(i,1)]/norm(D(i,:),2);
              x=[D(i,:);perp_d]\[r(i);0];
              x_1=x+len*perp_d';x_2=x-len*perp_d';
              z2d.draw_mirror(x_1,x_2,col);
          end
        end
        
        function get_vertices(self)
        % Вычисляет вершины зонотопа
        % Суммирует столбцы матрицы генераторов, домноженные на знаки
        % скалярных произведений нормалей к граням и генераторов
        % Знак при генераторе, перпендикулярном нормали к грани, равен 0
        % Две вершины, инцидентные грани, определяются вариацией знака при
        % этом генераторе
        Z=self.Z;m=self.m;
        SD=sign(self.D*Z);% Матрица знаков 
        x=Z(:,1:m-1)*SD(m,1:m-1)';
        V(m).left=x+Z(:,m);V(m).right=x-Z(:,m);
        x=Z(:,2:m)*SD(1,2:m)';
        V(1).left=x+Z(:,1);V(1).right=x-Z(:,1);
        if m>2
           for i=2:m-1
               x=Z(:,1:i-1)*SD(i,1:i-1)'+Z(:,i+1:m)*SD(i,i+1:m)';
               V(i).left=x+Z(:,i);V(i).right=x-Z(:,i);
           end
        end
        self.V=V;
        end
        
        function draw_vertices(self,col)
        % Рисует контур зонотопа по вершинам
         hold on;
         V=self.V;
          for i=1:self.m
              z2d.draw_mirror(V(i).left,V(i).right,col);
          end
        end
        
        function clockwise_vertices(self)
        % Выдает матрицу вершин, упорядоченных против часовой стрелки
        % Вызывает процедуру вычисления выпуклой оболочки, встроенную в
        % Матлаб (алгоритм Qhull)
        % Поэтому, результаты не гарантированы (какие то вершины могут быть
        % пропущены если они расположены слишком близко друг к другу)
        V=[[self.V.right],[self.V.left]];
        V=[-V,V];
        ind=convhull(V(1,:)',V(2,:)');
        self.V_clock=V(:,ind);
        end
        
        function draw_patch(self,col)
        % Рисует зонотоп в виде закрашенного многоугольника
        hold on;
        patch(self.V_clock(1,:),self.V_clock(2,:),col);
        end
        
    end 
 

end

